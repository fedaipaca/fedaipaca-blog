---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { resolvePath } from "../lib/utils";

const allPosts = await getCollection("blog", ({ data }) => !data.isDraft);
---

<BaseLayout>
  <section slot="hero" class="px-4">
    <div class="h-48 border-b border-neutral-400 flex items-center">
      <div class="flex items-start gap-4">
        <div
          class="flex items-center justify-center border border-neutral-300 rounded size-20 shrink-0 text-2xl leading-none font-mono"
        >
          [&gt;_]
        </div>
        <div class="flex flex-col justify-start gap-1">
          <h1 class="text-3xl font-extrabold">Code Blog</h1>
          <p class="text-neutral-600 font-mono text-sm leading-snug">~/$ echo Insights on software and engineering.</p>
        </div>
      </div>
    </div>
  </section>

  <div>
    <h2 class="font-mono">// POSTS</h2>

    <div class="divide-y divide-gray-300">
      {
        allPosts.length === 0 ? (
          <p class="py-8 text-neutral-600 font-mono">Oops! Nothing to read.</p>
        ) : (
          allPosts.map((post) => (
            <article class="hover:bg-stone-50">
              <a href={`${resolvePath("/blog")}/${post.id}`} class="flex items-start gap-4 py-8 group ">
                {post.data.image && (
                  <div class="w-20 shrink-0 rounded overflow-hidden">
                    <Image src={post.data.image.src} alt={post.data.image.alt} class="aspect-square object-cover" />
                  </div>
                )}
                <div>
                  <h3 class="text-lg font-bold leading-snug mt-0 group-hover:underline">{post.data.title}</h3>

                  <p class="mt-2 text-neutral-600 leading-snug text-sm">{post.data.description}</p>
                  <time
                    datetime={post.data.pubDate.toString()}
                    class="text-nowrap font-mono tracking-tight text-xs text-neutral-600"
                  >
                    {new Date(post.data.pubDate).toLocaleString("en-US", {
                      month: "short",
                      day: "numeric",
                      year: "numeric",
                    })}
                  </time>
                  <div class="mt-1 font-mono text-xs text-neutral-600 tracking-tight gap-x-2 gap-y-1 flex flex-wrap">
                    {post.data.tags?.map((tag) => (
                      <span class="">#{tag}</span>
                    ))}
                  </div>
                </div>
              </a>
            </article>
          ))
        )
      }
    </div>
  </div>
</BaseLayout>
